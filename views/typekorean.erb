<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">

  <title>Typekorean</title>
</head>
<body>
  <script type="text/javascript" charset="utf-8"><!--
var vowels = {
  'o' : 2, 'j' : 5, 'n' : 14,
  'k' : 1, 'i' : 3, 'O' : 4,
  'p' : 6, 'u' : 7, 'P' : 8,
  'h' : 9, 'hk' : 10, 'ho' : 11,
  'hl' : 12, 'y' : 13, 'nj' : 15,
  'np' : 16, 'nl' : 17, 'b' : 18,
  'm' : 19, 'ml' : 20, 'l' : 21 };
var initial_consonants = {
  'd' : 12, 'Q' : 9, 's' : 3,
  'r' : 1, 'R' : 2, 'e' : 4,
  'E' : 5, 'f' : 6, 'a' : 7,
  'q' : 8, 't' : 10, 'T' : 11,
  'w' : 13, 'W' : 14, 'c' : 15,
  'z' : 16, 'x' : 17, 'v' : 18,
  'g' : 19 };
var final_consonants = {
  'fq' : 11, 'ft' : 12, 'x' : 25,
  'r' : 1, 'R' : 2, 'rt' : 3,
  's' : 4, 'sw' : 5, 'sg' : 6,
  'e' : 7, 'f' : 8, 'fr' : 9,
  'fa' : 10, 'fe' : 13, 'fv' : 14,
  'fg' : 15, 'a' : 16, 'q' : 17,
  'qt' : 18, 't' : 19, 'T' : 20,
  'd' : 21, 'w' : 22, 'c' : 23,
  'z' : 24, 'v' : 26, 'g' : 27 };

function refresh() {
  document.forms[0].hangeul.value = ascii2hangeul(document.forms[0].ascii.value);
}

function ascii2hangeul(str) {
  //return str.split("").map(singlejamo);
  alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  result = "";
  cur_str = "";
  for (var i = 0; i < str.length; i++) {
    c = str.charAt(i);
    if (alpha.indexOf(c) == -1) {
      result += word2hangeul3(cur_str) + c;
      cur_str = "";
    } else {
      cur_str += c;
    }
  }
  result += word2hangeul3(cur_str);
  return result;
}

function isVowel(c) {
  return (vowels[c] != null)
}

function isConsonant(c) {
  return (isInitialConsonant(c) || isFinalConsonant(c));
}

function isFinalConsonant(c) {
  return (final_consonants[c] != null)
}

function isInitialConsonant(c) {
  return (final_consonants[c] != null)
}

function word2hangeul(ascii_word) {
  if (ascii_word == "") return "";
  hangeul_word = "";
  cur_str = ascii_word.substr(0,2);
  ascii_word = ascii_word.substr(2);
  while (ascii_word != "") {
    if (ascii_word.length < 2) {
      hangeul_word += char2hangeul(cur_str + ascii_word);
      return hangeul_word;
    } else if (isVowel(ascii_word.charAt(1))) {
      hangeul_word += char2hangeul(cur_str);
      cur_str = ascii_word.substr(0,2);
      ascii_word = ascii_word.substr(2);
    } else {
      cur_str = cur_str + ascii_word.substr(0,1);
      ascii_word = ascii_word.substr(1);
    }
  }
  hangeul_word += char2hangeul(cur_str);
  return hangeul_word;
}

function word2hangeul3(str) {
  var result = "";
  var lead, mid, end;
  var state = "start";
  for (var i = 0;;) {
    if (state == "start") {
      result += tochar(lead, mid, end);
      lead = (mid = (end = ""));
      lead = str.substr(i,1);
      if (lead == "") {
        break;
      } else if (isInitialConsonant(lead)) {
        state = "vowel";
      }
      i += lead.length;
    } else if (state == "vowel") {
      if (isVowel(str.substr(i,2))) {
        mid = str.substr(i,2);
      } else if (isVowel(str.substr(i,1))) {
        mid = str.substr(i,1)
      } else {
        state = "start"; continue
      }
      state = "finalConsonant";
      i += mid.length;
    } else if (state = "finalConsonant") {
      nextchar2 = str.substr(i+2,1);
      end2 = str.substr(i,2);
      nextchar1 = str.substr(i+1,1);
      end1 = str.substr(i,1);
      if (isFinalConsonant(end2) && (isConsonant(nextchar1) || nextchar1 == "")) {
        end = end2;
      } else if (isFinalConsonant(end1) && (isConsonant(nextchar1) || nextchar1 == "")) {
        end = end1;
      }
      i += end.length;
      state = "start";
    }
  }
  return result;
}

function tochar(start, mid, end) {
  if (!start && !mid && !end) {
    return "";
  } else if (!mid) {
    return singlejamo(start);
  }
  lead = initial_consonants[start];
  vowel = vowels[mid];
  tail = end ? final_consonants[end] : 0;
  return unichr(tail + (vowel-1) * 28 + (lead-1) * 588 + 44032);
}

function word2hangeul2(str) {
  var i = 0;
  result = "";
  while (str.length > i) {
    var lead, mid, end;
    next = str.substr(i,1);
    i++;
    if (next == "") {
      break;
    } else if (isVowel(next)) {
      result += singlejamo(next);
      continue;
    } else if (isInitialConsonant(next)) {
      lead = next;
    } else if (isFinalConsonatn(next)) {
      result += singlejamo(next);
      continue;
    } else alert("Error!");
    // We have an initial consonant
    next = str.substr(i,1);
    i++;
    if (next == "") {
      result += singlejamo(lead);
      break;
    } else if (isConsonant(next)) {
      result += singlejamo(lead);
      i--;
      continue;
    } else if (isVowel(next)) {
      mid = next;
    } else alert("Error!");
    // We have a vowel
    next = str.substr(i,1);
    i++;
    if (next == "") {
      result += char2hangeul(lead + mid);
      break;
    } else if (isVowel(next)) {
      if (isVowel(mid+next)) {
        mid = mid+next;
        next = str.substr(i,1);
        i++;
      } else {
        result += char2hangeul(lead + mid) + singlejamo(next);
        continue;
      }
    }
    if (next == "") {
      result += char2hangeul(lead + mid);
      break;
    } else if (isFinalConsonant(next)) {
      end = next;
    } else if (isInitialConsonant(next) || isVowel(next)) {
      result += char2hangeul(lead + mid);
      i--;
      continue;
    } else alert("Error!");
    // We have a consonant following the vowel.
    next = str.substr(i,1);
    i++;
    if (next == "") {
      result += char2hangeul(lead + mid + end);
      break;
    } else if (isVowel(next)) {
      result += char2hangeul(lead + mid);
      i -= 2;
      continue;
    } else if (isFinalConsonant(next)) {
      if (!isFinalConsonant(end + next)) {
        result += char2hangeul(lead + mid + end);
        i--;
        continue;
      }
    } else if (isInitialConsonant(next)) {
      result += char2hangeul(lead + mid + end);
      i--;
      continue;
    } else alert("Error!");
    // We have two compatible consonants following the vowel.
    end2 = next;
    next = str.substr(i,1);
    i++;
    if (next == "") {
      result += char2hangeul(lead + mid + end + end2);
      break;
    } else if (isConsonant(next)) {
      result += char2hangeul(lead + mid + end + end2);
      i--;
      continue;
    } else if (isVowel(next)) {
      result += char2hangeul(lead+mid+end);
      i -= 2;
      continue;
    }
  }
  return result;
}

function singlejamo(ascii) {
  var c;
  if (isConsonant(ascii)) {
    c = 0x1100 - 1 + initial_consonants[ascii];
  } else if (isVowel(ascii)) {
    c = 0x1160 + vowels[ascii];
  }
  return unichr(c);
}

function unichr(c) {
  if (!c) c = 9785;
  var uni = '"\\u' + c.toString(16)+'"';
  return eval(uni);
}

function char2hangeul(chr) {
  if (chr.length == 1) return singlejamo(chr);
  lead = initial_consonants[chr.charAt(0)];
  vowellength = (chr.length > 2 && isVowel(chr.charAt(2))) ? 2 : 1;
  vowel = vowels[chr.substr(1,vowellength)];
  chr = chr.substr(1+vowellength);
  if (chr != "") {
    tail = final_consonants[chr];
  } else {
    tail = 0;
  }
  return unichr(tail + (vowel-1) * 28 + (lead-1) * 588 + 44032);
}
// -->
  </script>
  <form>
    <p>여기서 타이프하시면...</p>
    <p><textarea name="ascii" rows="8" cols="40" onkeydown="refresh()" onkeyup="refresh()"></textarea></p>
    <p>여기서 나옵니다.</p>
    <p><textarea name="hangeul" rows="8" cols="40"></textarea></p>
  </form>

<script type="text/javascript">
var _gaq = _gaq || [];_gaq.push(['_setAccount', 'UA-19816277-1']);
_gaq.push(['_setDomainName', '.benlickly.com']);_gaq.push(['_trackPageview']);
(function() {var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);})();
</script></body>
</html>
